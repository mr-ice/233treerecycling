#!/usr/bin/env python3
"""Split a Tree Recycling List from Google Docs. Download as an xlsx,
then run this splitter to output xlsx, csv, and pdf versions of the
split list. """
import pandas as pd
import numpy as np
import pdfkit as pdf
import argparse
import time
import os

AP = argparse.ArgumentParser("Tree Route Splitter")


AP.add_argument('input',
                help="Input file should be an xlsx from the tree recycling google doc.")

AP.add_argument('--output',
                help="Output directory, default will be YYYYSplit",
                default= str(time.localtime().tm_year) + 'Split' )

args = AP.parse_args()

master_list = pd.read_excel(args.input, sheet_name='Form Responses 1')
master_list.replace(np.nan, '')

routes = set()
for i in master_list['Route']:
    routes.add(i)
#print(routes)

options = {'orientation' : 'Landscape',
#           'margin-top': '0.75in',
           'page-size': 'Letter'}
pd.set_option('display.max_colwidth', None)

if not os.path.isdir(args.output):
    os.mkdir(args.output)

for route in routes:
    output_filename = f'./{args.output}/route_{route}.'
    writer = pd.ExcelWriter(output_filename + 'xlsx',
            engine='xlsxwriter')
    this_route = master_list.loc[master_list['Route'] == route]
    human_route = this_route[['Name']]
    human_route['Gate'] = this_route['Gate Code (required if gated access)'].fillna('').astype(str)
    human_route['Phone'] = this_route['Phone Number'].fillna('').astype(str)
    human_route['Trees'] = this_route['Number of Trees'].fillna('').astype(str)
    human_route['Home'] = this_route['Will someone be home'].fillna('').astype(str)
    human_route['Comment'] = this_route['Comments (special instructions,  where tree or payment is located)'].fillna('')
    human_route['Address'] = this_route['House #'].astype(str) + ' ' + this_route['Street']  + ' ' + this_route['City']
    human_route['Apt'] = this_route['Apt. Number'].fillna('').astype(str)
    human_route['$Cash'] = ' '
    human_route['$Check'] = ' '
    human_route['Got'] = 'Y / N'
    human_route.to_excel(writer)
    writer.save()
    df = pd.DataFrame.from_dict(human_route)
    df.to_html(output_filename + 'html')
    pdf.from_file(output_filename + 'html', output_filename + 'pdf', options=options)
    df.to_csv(output_filename + 'csv', sep=';', encoding='utf-8')

